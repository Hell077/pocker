import React, { useEffect, useRef } from 'react';
import styles from './AboutProjectModal.module.css';

type Props = {
  isOpen: boolean;
  onClose: () => void;
};

const AboutProjectModal: React.FC<Props> = ({ isOpen, onClose }) => {
  const modalRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const handleEsc = (e: KeyboardEvent) => {
      if (e.key === 'Escape') onClose();
    };
    document.addEventListener('keydown', handleEsc);
    return () => document.removeEventListener('keydown', handleEsc);
  }, [onClose]);

  const handleClickOutside = (e: React.MouseEvent<HTMLDivElement>) => {
    if (modalRef.current && !modalRef.current.contains(e.target as Node)) {
      onClose();
    }
  };

  if (!isOpen) return null;

  return (
    <div className={styles.modalOverlay} onClick={handleClickOutside}>
      <div className={styles.modal} ref={modalRef}>
        <button className={styles.closeButton} onClick={onClose}>√ó</button>
        <h2>üß† –û –ø—Ä–æ–µ–∫—Ç–µ PokerKingdom</h2>
        <p>
          PokerKingdom ‚Äî —ç—Ç–æ —Å—Ç–∏–ª—å–Ω—ã–π, –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–π –ø–æ–∫–µ—Ä–Ω—ã–π —Å–µ—Ä–≤–∏—Å,
          —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å –¥—É—à–æ–π –∏ –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º. –ú—ã –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω—ã –∏–¥–µ–µ–π
          –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —ç—Å—Ç–µ—Ç–∏–∫—É –≤ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –Ω–µ–æ–Ω–æ–≤–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π ‚ô†.
        </p>
        <p>
          –ó–¥–µ—Å—å –Ω–µ—Ç —Å—Ç–∞–≤–æ–∫ –Ω–∞ –¥–µ–Ω—å–≥–∏, —Ç–æ–ª—å–∫–æ –¥—É—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è,
          —á–µ—Å—Ç–Ω–æ–π –∏–≥—Ä—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∫—Ä–∞—Å–æ—Ç—ã.
        </p>
        <p>
          –ë—ç–∫–µ–Ω–¥: Go + Temporal + PostgreSQL<br />
          –§—Ä–æ–Ω—Ç: React + TypeScript + CSS-–º–æ–¥—É–ª–∏<br />
          UI: —á–∏—Å—Ç—ã–π –Ω–µ–æ–Ω —Å üíñ
        </p>
        <p className={styles.notice}>
          –°–æ–∑–¥–∞–Ω–æ —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–∞–º–∏ ‚Äî –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤.
        </p>
      </div>
    </div>
  );
};

export default AboutProjectModal;
