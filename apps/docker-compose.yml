version: "3.8"

networks:
  temporal-network:
    driver: bridge
    name: temporal-network

services:
  # üîπ Main PostgreSQL (—Ç–≤–æ—è –±–∞–∑–∞)
  main-postgres:
    container_name: main-postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pokerDB
    ports:
      - "5432:5432"
    volumes:
      - main_pgdata:/var/lib/postgresql/data
    networks:
      - temporal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üî∏ Temporal PostgreSQL
  postgres:
    container_name: temporal-postgres
    image: postgres:12
    environment:
      POSTGRES_USER: ${TEMPORAL_USER}
      POSTGRES_PASSWORD: ${TEMPORAL_PASSWORD}
      POSTGRES_DB: ${TEMPORAL_DB}
    ports:
      - "5433:5432"
    volumes:
      - temporal_pgdata:/var/lib/postgresql/data
    networks:
      - temporal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TEMPORAL_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üî∏ Temporal Server
  temporal:
    container_name: temporal
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=${TEMPORAL_USER}
      - POSTGRES_PWD=${TEMPORAL_PASSWORD}
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - TEMPORAL_ADDRESS=temporal:7233
    ports:
      - "7233:7233"
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
    networks:
      - temporal-network
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 7233 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6

  # üî∏ Temporal UI
  temporal-ui:
    container_name: temporal-ui
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    ports:
      - "8080:8080"
    networks:
      - temporal-network
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8080 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üî∏ Temporal CLI
  temporal-admin-tools:
    container_name: temporal-admin-tools
    image: temporalio/admin-tools:${TEMPORAL_ADMINTOOLS_VERSION}
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    networks:
      - temporal-network
    stdin_open: true
    tty: true


  # üî∏ Minio
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
    command: server /data
    volumes:
      - minio_data:/data
    networks:
      - temporal-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üî∏ pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - temporal-network
    depends_on:
      - postgres
      - main-postgres
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:80 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  temporal_pgdata:
  main_pgdata:
  minio_data:
  pgadmin_data:
